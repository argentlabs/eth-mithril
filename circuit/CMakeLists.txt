cmake_minimum_required(VERSION 3.8)
project(argent-mixer C CXX)

if (CMAKE_VERSION VERSION_GREATER "3.0")
  set(CMAKE_CXX_STANDARD 11)
  set(CMAKE_CXX_STANDARD_REQUIRED ON) #...is required...
else()
  include(CheckCXXCompilerFlag)
  CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)

  if(COMPILER_SUPPORTS_CXX11)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
  elseif(COMPILER_SUPPORTS_CXX0X)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
  else()
        message(STATUS "The compiler ${CMAKE_CXX_COMPILER} has no C++11 support. Please use a different C++ compiler.")
  endif()
endif()

if (IOS_BUILD)
    set(CMAKE_INSTALL_PREFIX  ../ios/Hopper/depends)
    set(PKG_CONFIG_EXECUTABLE /usr/local/bin/pkg-config)
    set(OPENSSL_INCLUDE_DIR /usr/local/include)
    set(OPENSSL_CRYPTO_LIBRARY /usr/local/opt/openssl/lib/libcrypto.dylib)
    set(GMP_INCLUDE_DIR /usr/local/include)
    set(GMPXX_INCLUDE_DIR /usr/local/include)
    set(GMP_LIBRARY ${CMAKE_INSTALL_PREFIX}/lib/libgmp.a)
    set(GMPXX_LIBRARY ${CMAKE_INSTALL_PREFIX}/lib/libgmpxx.a)
endif()

add_subdirectory(../ethsnarks ../.build/ethsnarks EXCLUDE_FROM_ALL)

if (IOS_BUILD)
    add_library(mixer STATIC mixer.cpp)
else()
    add_library(mixer SHARED mixer.cpp)
endif()

add_definitions(-DBINARY_OUTPUT -DCURVE_ALT_BN128 -DMONTGOMERY_OUTPUT -DNO_PROCPS -DNO_PT_COMPRESSION=1)

target_link_libraries(mixer ethsnarks_common SHA3IUF)
set_property(TARGET mixer PROPERTY POSITION_INDEPENDENT_CODE ON)

if (IOS_BUILD)
    install (TARGETS mixer ethsnarks_common SHA3IUF ff DESTINATION lib)
    install (FILES mixer.hpp DESTINATION include)
    install (FILES ../.keys/mixer.pk.raw DESTINATION data)
    install (FILES ../.keys/mixer.vk.json DESTINATION data)
else()
    add_executable(mixer_cli mixer_cli.cpp)
    target_link_libraries(mixer_cli ethsnarks_common SHA3IUF)

    add_executable(mixer_selftest mixer_selftest.cpp)
    target_link_libraries(mixer_selftest ethsnarks_common SHA3IUF)
endif()

